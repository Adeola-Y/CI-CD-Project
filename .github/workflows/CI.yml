name: CI Workflow with ESLint and Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # List files in project_template 
      - name: List files in project_template directory
        run: ls -R ./project_template

      # List files in project_template/project directory
      - name: List files in project_template/project directory
        run: ls -l ./project_template/project

      # Install dependencies
      - name: Install dependencies
        run: npm install
        working-directory: ./project_template/project

      # Run ESLint with auto-fix
      - name: Run ESLint with auto-fix
        run: npx eslint . --config $GITHUB_WORKSPACE/project_template/project/eslint.config.js
        working-directory: ./project_template/project

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Install dependencies
      - name: Install dependencies
        run: npm install
        working-directory: ./project_template/project

      # Run Tests with Coverage
      - name: Run Tests with Coverage
        run: npm run test:coverage
        working-directory: ./project_template/project

      # Ensure Git configuration is cleaned up
      - name: Clean up orphan Git processes
        continue-on-error: true
        run: |
          git config --global --unset-all http.https://github.com/.extraheader || true
          git config --global --unset-all core.sshCommand || true
          git config --global --remove-section safe.directory || true

      # Upload Coverage Report to GitHub Actions (Text)
      - name: Upload Coverage Report to GitHub Actions (Text)
        if: success()
        run: |
          echo "Code coverage report:"
          cat ./project_template/project/coverage/index.html

      # Upload HTML Coverage Report as Artifact
      - name: Upload HTML Coverage Report as Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./project_template/project/coverage/index.html
